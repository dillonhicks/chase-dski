name_to_args = {
  'accept': [('int', 'fd'),
            ('struct sockaddr __user *', 'upeer_sockaddr'),
            ('int __user *', 'upeer_addrlen')],
 'accept4': [('int', 'fd'),
             ('struct sockaddr __user *', 'upeer_sockaddr'),
             ('int __user *', 'upeer_addrlen'),
             ('int', 'flags')],
 'access': [('const char __user *', 'filename'), ('int', 'mode')],
 'acct': [('const char __user *', 'name')],
 'add_key': [('const char __user *', '_type'),
             ('const char __user *', '_description'),
             ('const void __user *', '_payload'),
             ('size_t', 'plen'),
             ('key_serial_t', 'ringid')],
 'adjtimex': [('struct timex __user *', 'txc_p')],
 'alarm': [('unsigned int', 'seconds')],
 'bdflush': [('int', 'func'), ('long', 'data')],
 'bind': [('int', 'fd'),
          ('struct sockaddr __user *', 'umyaddr'),
          ('int', 'addrlen')],
 'brk': [('unsigned long', 'brk')],
 'capget': [('cap_user_header_t', 'header'), ('cap_user_data_t', 'dataptr')],
 'capset': [('cap_user_header_t', 'header'),
            ('const cap_user_data_t', 'data')],
 'chdir': [('const char __user *', 'filename')],
 'chmod': [('const char __user *', 'filename'), ('mode_t', 'mode')],
 'chown': [('const char __user *', 'filename'),
           ('uid_t', 'user'),
           ('gid_t', 'group')],
 'chown16': [('const char __user *', 'filename'),
             ('old_uid_t', 'user'),
             ('old_gid_t', 'group')],
 'chroot': [('const char __user *', 'filename')],
 'clock_getres': [('const clockid_t', 'which_clock'),
                  ('struct timespec __user *', 'tp')],
 'clock_gettime': [('const clockid_t', 'which_clock'),
                   ('struct timespec __user *', 'tp')],
 'clock_nanosleep': [('const clockid_t', 'which_clock'),
                     ('int', 'flags'),
                     ('const struct timespec __user *', 'rqtp'),
                     ('struct timespec __user *', 'rmtp')],
 'clock_settime': [('const clockid_t', 'which_clock'),
                   ('const struct timespec __user *', 'tp')],
 'clone': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'close': [('unsigned int', 'fd')],
 'connect': [('int', 'fd'),
             ('struct sockaddr __user *', 'uservaddr'),
             ('int', 'addrlen')],
 'creat': [('const char __user *', 'pathname'), ('int', 'mode')],
 'delete_module': [('const char __user *', 'name_user'),
                   ('unsigned int', 'flags')],
 'dup': [('unsigned int', 'fildes')],
 'dup2': [('unsigned int', 'oldfd'), ('unsigned int', 'newfd')],
 'dup3': [('unsigned int', 'oldfd'),
          ('unsigned int', 'newfd'),
          ('int', 'flags')],
 'epoll_create': [('int', 'size')],
 'epoll_create1': [('int', 'flags')],
 'epoll_ctl': [('int', 'epfd'),
               ('int', 'op'),
               ('int', 'fd'),
               ('struct epoll_event __user *', 'event')],
 'epoll_pwait': [('int', 'epfd'),
                 ('struct epoll_event __user *', 'events'),
                 ('int', 'maxevents'),
                 ('int', 'timeout'),
                 ('const sigset_t __user *', 'sigmask'),
                 ('size_t', 'sigsetsize')],
 'epoll_wait': [('int', 'epfd'),
                ('struct epoll_event __user *', 'events'),
                ('int', 'maxevents'),
                ('int', 'timeout')],
 'eventfd': [('unsigned int', 'count')],
 'eventfd2': [('unsigned int', 'count'), ('int', 'flags')],
 'execve': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'exit': [('int', 'error_code')],
 'exit_group': [('int', 'error_code')],
 'faccessat': [('int', 'dfd'),
               ('const char __user *', 'filename'),
               ('int', 'mode')],
 'fadvise64': ['PELIGRO! WARNING! NOTDONE!'],
 'fadvise64_64': ['PELIGRO! WARNING! NOTDONE!'],
 'fallocate': ['PELIGRO! WARNING! NOTDONE!'],
 'fchdir': [('unsigned int', 'fd')],
 'fchmod': [('unsigned int', 'fd'), ('mode_t', 'mode')],
 'fchmodat': [('int', 'dfd'),
              ('const char __user *', 'filename'),
              ('mode_t', 'mode')],
 'fchown': [('unsigned int', 'fd'), ('uid_t', 'user'), ('gid_t', 'group')],
 'fchown16': [('unsigned int', 'fd'),
              ('old_uid_t', 'user'),
              ('old_gid_t', 'group')],
 'fchownat': [('int', 'dfd'),
              ('const char __user *', 'filename'),
              ('uid_t', 'user'),
              ('gid_t', 'group'),
              ('int', 'flag')],
 'fcntl': [('unsigned int', 'fd'),
           ('unsigned int', 'cmd'),
           ('unsigned long', 'arg')],
 'fcntl64': [('unsigned int', 'fd'),
             ('unsigned int', 'cmd'),
             ('unsigned long', 'arg')],
 'fdatasync': [('unsigned int', 'fd')],
 'fgetxattr': [('int', 'fd'),
               ('const char __user *', 'name'),
               ('void __user *', 'value'),
               ('size_t', 'size')],
 'flistxattr': [('int', 'fd'), ('char __user *', 'list'), ('size_t', 'size')],
 'flock': [('unsigned int', 'fd'), ('unsigned int', 'cmd')],
 'fork': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'fremovexattr': [('int', 'fd'), ('const char __user *', 'name')],
 'fsetxattr': [('int', 'fd'),
               ('const char __user *', 'name'),
               ('const void __user *', 'value'),
               ('size_t', 'size'),
               ('int', 'flags')],
 'fstat': [('unsigned int', 'fd'),
           ('struct __old_kernel_stat __user *', 'statbuf')],
 'fstat64': [('unsigned long', 'fd'), ('struct stat64 __user *', 'statbuf')],
 'fstatat64': [('int', 'dfd'),
               ('char __user *', 'filename'),
               ('struct stat64 __user *', 'statbuf'),
               ('int', 'flag')],
 'fstatfs': [('unsigned int', 'fd'), ('struct statfs __user *', 'buf')],
 'fstatfs64': [('unsigned int', 'fd'),
               ('size_t', 'sz'),
               ('struct statfs64 __user *', 'buf')],
 'fsync': [('unsigned int', 'fd')],
 'ftruncate': [('unsigned int', 'fd'), ('unsigned long', 'length')],
 'ftruncate64': ['PELIGRO! WARNING! NOTDONE!'],
 'futex': [('u32 __user *', 'uaddr'),
           ('int', 'op'),
           ('u32', 'val'),
           ('struct timespec __user *', 'utime'),
           ('u32 __user *', 'uaddr2'),
           ('u32', 'val3')],
 'futimesat': [('int', 'dfd'),
               ('char __user *', 'filename'),
               ('struct timeval __user *', 'utimes')],
 'get_mempolicy': [('int __user *', 'policy'),
                   ('unsigned long __user *', 'nmask'),
                   ('unsigned long', 'maxnode'),
                   ('unsigned long', 'addr'),
                   ('unsigned long', 'flags')],
 'get_robust_list': [('int', 'pid'),
                     ('struct robust_list_head __user * __user *',
                      'head_ptr'),
                     ('size_t __user *', 'len_ptr')],
 'getcpu': [('unsigned __user *', 'cpup'),
            ('unsigned __user *', 'nodep'),
            ('struct getcpu_cache __user *', 'unused')],
 'getcwd': [('char __user *', 'buf'), ('unsigned long', 'size')],
 'getdents': [('unsigned int', 'fd'),
              ('struct linux_dirent __user *', 'dirent'),
              ('unsigned int', 'count')],
 'getdents64': [('unsigned int', 'fd'),
                ('struct linux_dirent64 __user *', 'dirent'),
                ('unsigned int', 'count')],
 'getegid': [],
 'getegid16': [],
 'geteuid': [],
 'geteuid16': [],
 'getgid': [],
 'getgid16': [],
 'getgroups': [('int', 'gidsetsize'), ('gid_t __user *', 'grouplist')],
 'getgroups16': [('int', 'gidsetsize'), ('old_gid_t __user *', 'grouplist')],
 'gethostname': [('char __user *', 'name'), ('int', 'len')],
 'getitimer': [('int', 'which'), ('struct itimerval __user *', 'value')],
 'getpeername': [('int', 'fd'),
                 ('struct sockaddr __user *', 'usockaddr'),
                 ('int __user *', 'usockaddr_len')],
 'getpgid': [('pid_t', 'pid')],
 'getpgrp': [],
 'getpid': [],
 'getppid': [],
 'getpriority': [('int', 'which'), ('int', 'who')],
 'getresgid': [('gid_t __user *', 'rgid'),
               ('gid_t __user *', 'egid'),
               ('gid_t __user *', 'sgid')],
 'getresgid16': [('old_gid_t __user *', 'rgid'),
                 ('old_gid_t __user *', 'egid'),
                 ('old_gid_t __user *', 'sgid')],
 'getresuid': [('uid_t __user *', 'ruid'),
               ('uid_t __user *', 'euid'),
               ('uid_t __user *', 'suid')],
 'getresuid16': [('old_uid_t __user *', 'ruid'),
                 ('old_uid_t __user *', 'euid'),
                 ('old_uid_t __user *', 'suid')],
 'getrlimit': [('unsigned int', 'resource'),
               ('struct rlimit __user *', 'rlim')],
 'getrusage': [('int', 'who'), ('struct rusage __user *', 'ru')],
 'getsid': [('pid_t', 'pid')],
 'getsockname': [('int', 'fd'),
                 ('struct sockaddr __user *', 'usockaddr'),
                 ('int __user *', 'usockaddr_len')],
 'getsockopt': [('int', 'fd'),
                ('int', 'level'),
                ('int', 'optname'),
                ('char __user *', 'optval'),
                ('int __user *', 'optlen')],
 'gettid': [],
 'gettimeofday': [('struct timeval __user *', 'tv'),
                  ('struct timezone __user *', 'tz')],
 'getuid': [],
 'getuid16': [],
 'getxattr': [('const char __user *', 'pathname'),
              ('const char __user *', 'name'),
              ('void __user *', 'value'),
              ('size_t', 'size')],
 'init_module': [('void __user *', 'umod'),
                 ('unsigned long', 'len'),
                 ('const char __user *', 'uargs')],
 'inotify_add_watch': [('int', 'fd'),
                       ('const char __user *', 'pathname'),
                       ('u32', 'mask')],
 'inotify_init': [],
 'inotify_init1': [('int', 'flags')],
 'inotify_rm_watch': [('int', 'fd'), ('__s32', 'wd')],
 'io_cancel': [('aio_context_t', 'ctx_id'),
               ('struct iocb __user *', 'iocb'),
               ('struct io_event __user *', 'result')],
 'io_destroy': [('aio_context_t', 'ctx')],
 'io_getevents': [('aio_context_t', 'ctx_id'),
                  ('long', 'min_nr'),
                  ('long', 'nr'),
                  ('struct io_event __user *', 'events'),
                  ('struct timespec __user *', 'timeout')],
 'io_setup': [('unsigned', 'nr_events'), ('aio_context_t __user *', 'ctxp')],
 'io_submit': [('aio_context_t', 'ctx_id'),
               ('long', 'nr'),
               ('struct iocb __user * __user *', 'iocbpp')],
 'ioctl': [('unsigned int', 'fd'),
           ('unsigned int', 'cmd'),
           ('unsigned long', 'arg')],
 'iopl': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'ioprio_get': [('int', 'which'), ('int', 'who')],
 'ioprio_set': [('int', 'which'), ('int', 'who'), ('int', 'ioprio')],
 'kexec_load': [('unsigned long', 'entry'),
                ('unsigned long', 'nr_segments'),
                ('struct kexec_segment __user *', 'segments'),
                ('unsigned long', 'flags')],
 'keyctl': [('int', 'option'),
            ('unsigned long', 'arg2'),
            ('unsigned long', 'arg3'),
            ('unsigned long', 'arg4'),
            ('unsigned long', 'arg5')],
 'kill': [('pid_t', 'pid'), ('int', 'sig')],
 'lchown': [('const char __user *', 'filename'),
            ('uid_t', 'user'),
            ('gid_t', 'group')],
 'lchown16': [('const char __user *', 'filename'),
              ('old_uid_t', 'user'),
              ('old_gid_t', 'group')],
 'lgetxattr': [('const char __user *', 'pathname'),
               ('const char __user *', 'name'),
               ('void __user *', 'value'),
               ('size_t', 'size')],
 'link': [('const char __user *', 'oldname'),
          ('const char __user *', 'newname')],
 'linkat': [('int', 'olddfd'),
            ('const char __user *', 'oldname'),
            ('int', 'newdfd'),
            ('const char __user *', 'newname'),
            ('int', 'flags')],
 'listen': [('int', 'fd'), ('int', 'backlog')],
 'listxattr': [('const char __user *', 'pathname'),
               ('char __user *', 'list'),
               ('size_t', 'size')],
 'llistxattr': [('const char __user *', 'pathname'),
                ('char __user *', 'list'),
                ('size_t', 'size')],
 'llseek': [('unsigned int', 'fd'),
            ('unsigned long', 'offset_high'),
            ('unsigned long', 'offset_low'),
            ('loff_t __user *', 'result'),
            ('unsigned int', 'origin')],
 'lookup_dcookie': ['PELIGRO! WARNING! NOTDONE!'],
 'lremovexattr': [('const char __user *', 'pathname'),
                  ('const char __user *', 'name')],
 'lseek': [('unsigned int', 'fd'),
           ('off_t', 'offset'),
           ('unsigned int', 'origin')],
 'lsetxattr': [('const char __user *', 'pathname'),
               ('const char __user *', 'name'),
               ('const void __user *', 'value'),
               ('size_t', 'size'),
               ('int', 'flags')],
 'lstat': [('char __user *', 'filename'),
           ('struct __old_kernel_stat __user *', 'statbuf')],
 'lstat64': [('char __user *', 'filename'),
             ('struct stat64 __user *', 'statbuf')],
 'madvise': [('unsigned long', 'start'),
             ('size_t', 'len_in'),
             ('int', 'behavior')],
 'mbind': [('unsigned long', 'start'),
           ('unsigned long', 'len'),
           ('unsigned long', 'mode'),
           ('unsigned long __user *', 'nmask'),
           ('unsigned long', 'maxnode'),
           ('unsigned', 'flags')],
 'migrate_pages': [('pid_t', 'pid'),
                   ('unsigned long', 'maxnode'),
                   ('const unsigned long __user *', 'old_nodes'),
                   ('const unsigned long __user *', 'new_nodes')],
 'mincore': [('unsigned long', 'start'),
             ('size_t', 'len'),
             ('unsigned char __user *', 'vec')],
 'mkdir': [('const char __user *', 'pathname'), ('int', 'mode')],
 'mkdirat': [('int', 'dfd'),
             ('const char __user *', 'pathname'),
             ('int', 'mode')],
 'mknod': [('const char __user *', 'filename'),
           ('int', 'mode'),
           ('unsigned', 'dev')],
 'mknodat': [('int', 'dfd'),
             ('const char __user *', 'filename'),
             ('int', 'mode'),
             ('unsigned', 'dev')],
 'mlock': [('unsigned long', 'start'), ('size_t', 'len')],
 'mlockall': [('int', 'flags')],
 'mmap': [('unsigned long', 'addr'),
          ('unsigned long', 'len'),
          ('unsigned long', 'prot'),
          ('unsigned long', 'flags'),
          ('unsigned long', 'fd'),
          ('unsigned long', 'off')],
 'mount': [('char __user *', 'dev_name'),
           ('char __user *', 'dir_name'),
           ('char __user *', 'type'),
           ('unsigned long', 'flags'),
           ('void __user *', 'data')],
 'move_pages': [('pid_t', 'pid'),
                ('unsigned long', 'nr_pages'),
                ('const void __user * __user *', 'pages'),
                ('const int __user *', 'nodes'),
                ('int __user *', 'status'),
                ('int', 'flags')],
 'mprotect': [('unsigned long', 'start'),
              ('size_t', 'len'),
              ('unsigned long', 'prot')],
 'mq_getsetattr': [('mqd_t', 'mqdes'),
                   ('const struct mq_attr __user *', 'u_mqstat'),
                   ('struct mq_attr __user *', 'u_omqstat')],
 'mq_notify': [('mqd_t', 'mqdes'),
               ('const struct sigevent __user *', 'u_notification')],
 'mq_open': [('const char __user *', 'u_name'),
             ('int', 'oflag'),
             ('mode_t', 'mode'),
             ('struct mq_attr __user *', 'u_attr')],
 'mq_timedreceive': [('mqd_t', 'mqdes'),
                     ('char __user *', 'u_msg_ptr'),
                     ('size_t', 'msg_len'),
                     ('unsigned int __user *', 'u_msg_prio'),
                     ('const struct timespec __user *', 'u_abs_timeout')],
 'mq_timedsend': [('mqd_t', 'mqdes'),
                  ('const char __user *', 'u_msg_ptr'),
                  ('size_t', 'msg_len'),
                  ('unsigned int', 'msg_prio'),
                  ('const struct timespec __user *', 'u_abs_timeout')],
 'mq_unlink': [('const char __user *', 'u_name')],
 'mremap': [('unsigned long', 'addr'),
            ('unsigned long', 'old_len'),
            ('unsigned long', 'new_len'),
            ('unsigned long', 'flags'),
            ('unsigned long', 'new_addr')],
 'msgctl': [('int', 'msqid'),
            ('int', 'cmd'),
            ('struct msqid_ds __user *', 'buf')],
 'msgget': [('key_t', 'key'), ('int', 'msgflg')],
 'msgrcv': [('int', 'msqid'),
            ('struct msgbuf __user *', 'msgp'),
            ('size_t', 'msgsz'),
            ('long', 'msgtyp'),
            ('int', 'msgflg')],
 'msgsnd': [('int', 'msqid'),
            ('struct msgbuf __user *', 'msgp'),
            ('size_t', 'msgsz'),
            ('int', 'msgflg')],
 'msync': [('unsigned long', 'start'), ('size_t', 'len'), ('int', 'flags')],
 'munlock': [('unsigned long', 'start'), ('size_t', 'len')],
 'munlockall': [],
 'munmap': [('unsigned long', 'addr'), ('size_t', 'len')],
 'nanosleep': [('struct timespec __user *', 'rqtp'),
               ('struct timespec __user *', 'rmtp')],
 'newfstat': [('unsigned int', 'fd'), ('struct stat __user *', 'statbuf')],
 'newfstatat': [('int', 'dfd'),
                ('char __user *', 'filename'),
                ('struct stat __user *', 'statbuf'),
                ('int', 'flag')],
 'newlstat': [('char __user *', 'filename'),
              ('struct stat __user *', 'statbuf')],
 'newstat': [('char __user *', 'filename'),
             ('struct stat __user *', 'statbuf')],
 'newuname': [('struct new_utsname __user *', 'name')],
 'nfsservctl': [('int', 'cmd'),
                ('struct nfsctl_arg __user *', 'arg'),
                ('void __user *', 'res')],
 'nice': [('int', 'increment')],
 'old_getrlimit': [('unsigned int', 'resource'),
                   ('struct rlimit __user *', 'rlim')],
 'old_readdir': [('unsigned int', 'fd'),
                 ('struct old_linux_dirent __user *', 'dirent'),
                 ('unsigned int', 'count')],
 'oldumount': [('char __user *', 'name')],
 'open': [('const char __user *', 'filename'),
          ('int', 'flags'),
          ('int', 'mode')],
 'openat': [('int', 'dfd'),
            ('const char __user *', 'filename'),
            ('int', 'flags'),
            ('int', 'mode')],
 'pause': [],
 'pciconfig_read': [('unsigned long', 'bus'),
                    ('unsigned long', 'dfn'),
                    ('unsigned long', 'off'),
                    ('unsigned long', 'len'),
                    ('void __user *', 'buf')],
 'pciconfig_write': [('unsigned long', 'bus'),
                     ('unsigned long', 'dfn'),
                     ('unsigned long', 'off'),
                     ('unsigned long', 'len'),
                     ('void __user *', 'buf')],
 'perf_counter_open': [('struct perf_counter_attr __user *', 'attr_uptr'),
                       ('pid_t', 'pid'),
                       ('int', 'cpu'),
                       ('int', 'group_fd'),
                       ('unsigned long', 'flags')],
 'personality': [('u_long', 'personality')],
 'pipe': [('int __user *', 'fildes')],
 'pipe2': [('int __user *', 'fildes'), ('int', 'flags')],
 'pivot_root': [('const char __user *', 'new_root'),
                ('const char __user *', 'put_old')],
 'poll': [('struct pollfd __user *', 'ufds'),
          ('unsigned int', 'nfds'),
          ('long', 'timeout_msecs')],
 'ppoll': [('struct pollfd __user *', 'ufds'),
           ('unsigned int', 'nfds'),
           ('struct timespec __user *', 'tsp'),
           ('const sigset_t __user *', 'sigmask'),
           ('size_t', 'sigsetsize')],
 'prctl': [('int', 'option'),
           ('unsigned long', 'arg2'),
           ('unsigned long', 'arg3'),
           ('unsigned long', 'arg4'),
           ('unsigned long', 'arg5')],
 'pread64': ['PELIGRO! WARNING! NOTDONE!'],
 'preadv': [('unsigned long', 'fd'),
            ('const struct iovec __user *', 'vec'),
            ('unsigned long', 'vlen'),
            ('unsigned long', 'pos_l'),
            ('unsigned long', 'pos_h')],
 'pselect6': [('int', 'n'),
              ('fd_set __user *', 'inp'),
              ('fd_set __user *', 'outp'),
              ('fd_set __user *', 'exp'),
              ('struct timespec __user *', 'tsp'),
              ('void __user *', 'sig')],
 'ptrace': [('long', 'request'),
            ('long', 'pid'),
            ('long', 'addr'),
            ('long', 'data')],
 'pwrite64': ['PELIGRO! WARNING! NOTDONE!'],
 'pwritev': [('unsigned long', 'fd'),
             ('const struct iovec __user *', 'vec'),
             ('unsigned long', 'vlen'),
             ('unsigned long', 'pos_l'),
             ('unsigned long', 'pos_h')],
 'quotactl': [('unsigned int', 'cmd'),
              ('const char __user *', 'special'),
              ('qid_t', 'id'),
              ('void __user *', 'addr')],
 'read': [('unsigned int', 'fd'),
          ('char __user *', 'buf'),
          ('size_t', 'count')],
 'readahead': ['PELIGRO! WARNING! NOTDONE!'],
 'readlink': [('const char __user *', 'path'),
              ('char __user *', 'buf'),
              ('int', 'bufsiz')],
 'readlinkat': [('int', 'dfd'),
                ('const char __user *', 'pathname'),
                ('char __user *', 'buf'),
                ('int', 'bufsiz')],
 'readv': [('unsigned long', 'fd'),
           ('const struct iovec __user *', 'vec'),
           ('unsigned long', 'vlen')],
 'reboot': [('int', 'magic1'),
            ('int', 'magic2'),
            ('unsigned int', 'cmd'),
            ('void __user *', 'arg')],
 'recvfrom': [('int', 'fd'),
              ('void __user *', 'ubuf'),
              ('size_t', 'size'),
              ('unsigned', 'flags'),
              ('struct sockaddr __user *', 'addr'),
              ('int __user *', 'addr_len')],
 'recvmsg': [('int', 'fd'),
             ('struct msghdr __user *', 'msg'),
             ('unsigned int', 'flags')],
 'remap_file_pages': [('unsigned long', 'start'),
                      ('unsigned long', 'size'),
                      ('unsigned long', 'prot'),
                      ('unsigned long', 'pgoff'),
                      ('unsigned long', 'flags')],
 'removexattr': [('const char __user *', 'pathname'),
                 ('const char __user *', 'name')],
 'rename': [('const char __user *', 'oldname'),
            ('const char __user *', 'newname')],
 'renameat': [('int', 'olddfd'),
              ('const char __user *', 'oldname'),
              ('int', 'newdfd'),
              ('const char __user *', 'newname')],
 'request_key': [('const char __user *', '_type'),
                 ('const char __user *', '_description'),
                 ('const char __user *', '_callout_info'),
                 ('key_serial_t', 'destringid')],
 'restart_syscall': [],
 'rmdir': [('const char __user *', 'pathname')],
 'rt_sigaction': [('int', 'sig'),
                  ('const struct sigaction __user *', 'act'),
                  ('struct sigaction __user *', 'oact'),
                  ('size_t', 'sigsetsize')],
 'rt_sigpending': [('sigset_t __user *', 'set'), ('size_t', 'sigsetsize')],
 'rt_sigprocmask': [('int', 'how'),
                    ('sigset_t __user *', 'set'),
                    ('sigset_t __user *', 'oset'),
                    ('size_t', 'sigsetsize')],
 'rt_sigqueueinfo': [('pid_t', 'pid'),
                     ('int', 'sig'),
                     ('siginfo_t __user *', 'uinfo')],
 'rt_sigreturn': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'rt_sigsuspend': [('sigset_t __user *', 'unewset'), ('size_t', 'sigsetsize')],
 'rt_sigtimedwait': [('const sigset_t __user *', 'uthese'),
                     ('siginfo_t __user *', 'uinfo'),
                     ('const struct timespec __user *', 'uts'),
                     ('size_t', 'sigsetsize')],
 'rt_tgsigqueueinfo': [('pid_t', 'tgid'),
                       ('pid_t', 'pid'),
                       ('int', 'sig'),
                       ('siginfo_t __user *', 'uinfo')],
 'sched_get_priority_max': [('int', 'policy')],
 'sched_get_priority_min': [('int', 'policy')],
 'sched_getaffinity': [('pid_t', 'pid'),
                       ('unsigned int', 'len'),
                       ('unsigned long __user *', 'user_mask_ptr')],
 'sched_getparam': [('pid_t', 'pid'),
                    ('struct sched_param __user *', 'param')],
 'sched_getscheduler': [('pid_t', 'pid')],
 'sched_rr_get_interval': [('pid_t', 'pid'),
                           ('struct timespec __user *', 'interval')],
 'sched_setaffinity': [('pid_t', 'pid'),
                       ('unsigned int', 'len'),
                       ('unsigned long __user *', 'user_mask_ptr')],
 'sched_setparam': [('pid_t', 'pid'),
                    ('struct sched_param __user *', 'param')],
 'sched_setscheduler': [('pid_t', 'pid'),
                        ('int', 'policy'),
                        ('struct sched_param __user *', 'param')],
 'sched_yield': [],
 'select': [('int', 'n'),
            ('fd_set __user *', 'inp'),
            ('fd_set __user *', 'outp'),
            ('fd_set __user *', 'exp'),
            ('struct timeval __user *', 'tvp')],
 'semctl': ['PELIGRO! WARNING! NOTDONE!'],
 'semget': [('key_t', 'key'), ('int', 'nsems'), ('int', 'semflg')],
 'semop': [('int', 'semid'),
           ('struct sembuf __user *', 'tsops'),
           ('unsigned', 'nsops')],
 'semtimedop': [('int', 'semid'),
                ('struct sembuf __user *', 'tsops'),
                ('unsigned', 'nsops'),
                ('const struct timespec __user *', 'timeout')],
 'send': [('int', 'fd'),
          ('void __user *', 'buff'),
          ('size_t', 'len'),
          ('unsigned', 'flags')],
 'sendfile': [('int', 'out_fd'),
              ('int', 'in_fd'),
              ('off_t __user *', 'offset'),
              ('size_t', 'count')],
 'sendfile64': [('int', 'out_fd'),
                ('int', 'in_fd'),
                ('loff_t __user *', 'offset'),
                ('size_t', 'count')],
 'sendmsg': [('int', 'fd'),
             ('struct msghdr __user *', 'msg'),
             ('unsigned', 'flags')],
 'sendto': [('int', 'fd'),
            ('void __user *', 'buff'),
            ('size_t', 'len'),
            ('unsigned', 'flags'),
            ('struct sockaddr __user *', 'addr'),
            ('int', 'addr_len')],
 'set_mempolicy': [('int', 'mode'),
                   ('unsigned long __user *', 'nmask'),
                   ('unsigned long', 'maxnode')],
 'set_robust_list': [('struct robust_list_head __user *', 'head'),
                     ('size_t', 'len')],
 'set_tid_address': [('int __user *', 'tidptr')],
 'setdomainname': [('char __user *', 'name'), ('int', 'len')],
 'setfsgid': [('gid_t', 'gid')],
 'setfsgid16': [('old_gid_t', 'gid')],
 'setfsuid': [('uid_t', 'uid')],
 'setfsuid16': [('old_uid_t', 'uid')],
 'setgid': [('gid_t', 'gid')],
 'setgid16': [('old_gid_t', 'gid')],
 'setgroups': [('int', 'gidsetsize'), ('gid_t __user *', 'grouplist')],
 'setgroups16': [('int', 'gidsetsize'), ('old_gid_t __user *', 'grouplist')],
 'sethostname': [('char __user *', 'name'), ('int', 'len')],
 'setitimer': [('int', 'which'),
               ('struct itimerval __user *', 'value'),
               ('struct itimerval __user *', 'ovalue')],
 'setpgid': [('pid_t', 'pid'), ('pid_t', 'pgid')],
 'setpriority': [('int', 'which'), ('int', 'who'), ('int', 'niceval')],
 'setregid': [('gid_t', 'rgid'), ('gid_t', 'egid')],
 'setregid16': [('old_gid_t', 'rgid'), ('old_gid_t', 'egid')],
 'setresgid': [('gid_t', 'rgid'), ('gid_t', 'egid'), ('gid_t', 'sgid')],
 'setresgid16': [('old_gid_t', 'rgid'),
                 ('old_gid_t', 'egid'),
                 ('old_gid_t', 'sgid')],
 'setresuid': [('uid_t', 'ruid'), ('uid_t', 'euid'), ('uid_t', 'suid')],
 'setresuid16': [('old_uid_t', 'ruid'),
                 ('old_uid_t', 'euid'),
                 ('old_uid_t', 'suid')],
 'setreuid': [('uid_t', 'ruid'), ('uid_t', 'euid')],
 'setreuid16': [('old_uid_t', 'ruid'), ('old_uid_t', 'euid')],
 'setrlimit': [('unsigned int', 'resource'),
               ('struct rlimit __user *', 'rlim')],
 'setsid': [],
 'setsockopt': [('int', 'fd'),
                ('int', 'level'),
                ('int', 'optname'),
                ('char __user *', 'optval'),
                ('int', 'optlen')],
 'settimeofday': [('struct timeval __user *', 'tv'),
                  ('struct timezone __user *', 'tz')],
 'setuid': [('uid_t', 'uid')],
 'setuid16': [('old_uid_t', 'uid')],
 'setxattr': [('const char __user *', 'pathname'),
              ('const char __user *', 'name'),
              ('const void __user *', 'value'),
              ('size_t', 'size'),
              ('int', 'flags')],
 'sgetmask': [],
 'shmat': [('int', 'shmid'), ('char __user *', 'shmaddr'), ('int', 'shmflg')],
 'shmctl': [('int', 'shmid'),
            ('int', 'cmd'),
            ('struct shmid_ds __user *', 'buf')],
 'shmdt': [('char __user *', 'shmaddr')],
 'shmget': [('key_t', 'key'), ('size_t', 'size'), ('int', 'shmflg')],
 'shutdown': [('int', 'fd'), ('int', 'how')],
 'sigaltstack': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'signal': [('int', 'sig'), ('__sighandler_t', 'handler')],
 'signalfd': [('int', 'ufd'),
              ('sigset_t __user *', 'user_mask'),
              ('size_t', 'sizemask')],
 'signalfd4': [('int', 'ufd'),
               ('sigset_t __user *', 'user_mask'),
               ('size_t', 'sizemask'),
               ('int', 'flags')],
 'sigpending': [('old_sigset_t __user *', 'set')],
 'sigprocmask': [('int', 'how'),
                 ('old_sigset_t __user *', 'set'),
                 ('old_sigset_t __user *', 'oset')],
 'sigreturn': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'socket': [('int', 'family'), ('int', 'type'), ('int', 'protocol')],
 'socketcall': [('int', 'call'), ('unsigned long __user *', 'args')],
 'socketpair': [('int', 'family'),
                ('int', 'type'),
                ('int', 'protocol'),
                ('int __user *', 'usockvec')],
 'splice': [('int', 'fd_in'),
            ('loff_t __user *', 'off_in'),
            ('int', 'fd_out'),
            ('loff_t __user *', 'off_out'),
            ('size_t', 'len'),
            ('unsigned int', 'flags')],
 'ssetmask': [('int', 'newmask')],
 'stat': [('char __user *', 'filename'),
          ('struct __old_kernel_stat __user *', 'statbuf')],
 'stat64': [('char __user *', 'filename'),
            ('struct stat64 __user *', 'statbuf')],
 'statfs': [('const char __user *', 'pathname'),
            ('struct statfs __user *', 'buf')],
 'statfs64': [('const char __user *', 'pathname'),
              ('size_t', 'sz'),
              ('struct statfs64 __user *', 'buf')],
 'stime': [('time_t __user *', 'tptr')],
 'swapoff': [('const char __user *', 'specialfile')],
 'swapon': [('const char __user *', 'specialfile'), ('int', 'swap_flags')],
 'symlink': [('const char __user *', 'oldname'),
             ('const char __user *', 'newname')],
 'symlinkat': [('const char __user *', 'oldname'),
               ('int', 'newdfd'),
               ('const char __user *', 'newname')],
 'sync': [],
 'sync_file_range': ['PELIGRO! WARNING! NOTDONE!'],
 'sync_file_range2': ['PELIGRO! WARNING! NOTDONE!'],
 'sysctl': [('struct __sysctl_args __user *', 'args')],
 'sysfs': [('int', 'option'),
           ('unsigned long', 'arg1'),
           ('unsigned long', 'arg2')],
 'sysinfo': [('struct sysinfo __user *', 'info')],
 'syslog': [('int', 'type'), ('char __user *', 'buf'), ('int', 'len')],
 'tee': [('int', 'fdin'),
         ('int', 'fdout'),
         ('size_t', 'len'),
         ('unsigned int', 'flags')],
 'tgkill': [('pid_t', 'tgid'), ('pid_t', 'pid'), ('int', 'sig')],
 'time': [('time_t __user *', 'tloc')],
 'timer_create': [('const clockid_t', 'which_clock'),
                  ('struct sigevent __user *', 'timer_event_spec'),
                  ('timer_t __user *', 'created_timer_id')],
 'timer_delete': [('timer_t', 'timer_id')],
 'timer_getoverrun': [('timer_t', 'timer_id')],
 'timer_gettime': [('timer_t', 'timer_id'),
                   ('struct itimerspec __user *', 'setting')],
 'timer_settime': [('timer_t', 'timer_id'),
                   ('int', 'flags'),
                   ('const struct itimerspec __user *', 'new_setting'),
                   ('struct itimerspec __user *', 'old_setting')],
 'timerfd_create': [('int', 'clockid'), ('int', 'flags')],
 'timerfd_gettime': [('int', 'ufd'), ('struct itimerspec __user *', 'otmr')],
 'timerfd_settime': [('int', 'ufd'),
                     ('int', 'flags'),
                     ('const struct itimerspec __user *', 'utmr'),
                     ('struct itimerspec __user *', 'otmr')],
 'times': [('struct tms __user *', 'tbuf')],
 'tkill': [('pid_t', 'pid'), ('int', 'sig')],
 'truncate': [('const char __user *', 'path'), ('unsigned long', 'length')],
 'truncate64': ['PELIGRO! WARNING! NOTDONE!'],
 'umask': [('int', 'mask')],
 'umount': [('char __user *', 'name'), ('int', 'flags')],
 'uname': [('struct new_utsname __user *', 'name')],
 'unlink': [('const char __user *', 'pathname')],
 'unlinkat': [('int', 'dfd'),
              ('const char __user *', 'pathname'),
              ('int', 'flag')],
 'unshare': [('unsigned long', 'unshare_flags')],
 'uselib': [('const char __user *', 'library')],
 'ustat': [('unsigned', 'dev'), ('struct ustat __user *', 'ubuf')],
 'utime': [('char __user *', 'filename'),
           ('struct utimbuf __user *', 'times')],
 'utimensat': [('int', 'dfd'),
               ('char __user *', 'filename'),
               ('struct timespec __user *', 'utimes'),
               ('int', 'flags')],
 'utimes': [('char __user *', 'filename'),
            ('struct timeval __user *', 'utimes')],
 'vfork': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'vhangup': [],
 'vm86': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'vm86old': [('struct pt_regs *', 'regs'), 'PELIGRO! WARNING! NOTDONE!'],
 'vmsplice': [('int', 'fd'),
              ('const struct iovec __user *', 'iov'),
              ('unsigned long', 'nr_segs'),
              ('unsigned int', 'flags')],
 'wait4': [('pid_t', 'upid'),
           ('int __user *', 'stat_addr'),
           ('int', 'options'),
           ('struct rusage __user *', 'ru')],
 'waitid': [('int', 'which'),
            ('pid_t', 'upid'),
            ('struct siginfo __user *', 'infop'),
            ('int', 'options'),
            ('struct rusage __user *', 'ru')],
 'waitpid': [('pid_t', 'pid'),
             ('int __user *', 'stat_addr'),
             ('int', 'options')],
 'write': [('unsigned int', 'fd'),
           ('const char __user *', 'buf'),
           ('size_t', 'count')],
 'writev': [('unsigned long', 'fd'),
            ('const struct iovec __user *', 'vec'),
            ('unsigned long', 'vlen')]}
